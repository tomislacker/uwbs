#!/bin/bash

#################
# Configuration #
#################

###
# Define X window geometry
###
GEOM_WIDTH=14
GEOM_HEIGHT=20

###
# Define mixer command
###
MIXER_CMD=alsamixer

###
# Define application to launch a GUI-terminal with the mixer program
###
DEFAULT_GUI_TERM=$(which xfce4-terminal)
GUI_TERM=$(which ${COLORTERM})
GUI_TERM=${GUI_TERM:-${DEFAULT_GUI_TERM}}

###
# Should zenity be used on fatal errors?
###
ZENITY_ERROR_ON_FATAL=y

TERM_TITLE="MixerTerm"

########################
# Function Definitions #
########################
msg.getStamp ()
{
    date --iso-8601=seconds
}

msg.out ()
{
    echo -e "[$(msg.getStamp)] $@"
}

msg.err ()
{
    msg.out $@ >&2
}

cleanupOnExit ()
{
    msg.err "cleanupOnExit(): NOT IMPLEMENTED" 
}

fatal.err ()
{
    local exitVal=$1
    shift
    local fatal_msg=$@

    if [ -n "$ZENITY_ERROR_ON_FATAL" ]
    then
        zenity \
            --error \
            --text="${fatal_msg}"
    fi

    msg.err $@
    exit $exitVal
}

#############
# Execution #
#############

# Attempt to ensure some commands get run prior to this invocation exiting
trap "cleanupOnExit" EXIT

# Define an array of arguments that get passed to the mixer GUI interface
term_args=()

# Specifiy geometry for the mixer window?
if [ -n "$GEOM_WIDTH" -a -n "$GEOM_HEIGHT" ]
then
    term_args+=( "--geometry=${GEOM_WIDTH}x${GEOM_HEIGHT}" )
else
    if [ -z "$GEOM_WIDTH" -a -z "$GEOM_HEIGHT" ]
    then
        fatal.err 10 \
            "Cannot launch mixer without geometry.\nMissing GEOM_WIDTH and GEOM_HEIGHT"
    elif [ -z "$GEOM_WIDTH" ]
    then
        fatal.err 10 \
            "Cannot launch mixer without geometry.\nMissing GEOM_WIDTH"
    elif [ -z "$GEOM_HEIGHT" ]
    then
        fatal.err 10 \
            "Cannot launch mixer without geometry.\nMissing GEOM_HEIGHT"
    fi
fi

# Specify the mixer program?
if [ -z "$MIXER_CMD" ]
then
    fatal.err 10 \
        "Mixer command '${MIXER_CMD}' is invalid."
fi

# Specify a title?
if [ -n "$TERM_TITLE" ]
then
    term_args+=( "--title" "${TERM_TITLE}" )
fi

# Launch the GUI window
$GUI_TERM \
    ${term_args[*]} \
    --execute "${MIXER_CMD}"
gui_term_exit=$?

echo "${GUI_TERM} with ${MIXER_CMD} with args:"
echo "\t${term_args[*]}"
echo
echo "Exited $gui_term_exit"
