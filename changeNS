#!/bin/bash

DEBUG_OUTPUT=n
TEST_ONLY=y
RESOLV_CONF_PATH=/etc/resolv.conf
DNS_DOMAIN=$(hostname -d 2>>/dev/null)
DNS_SERVERS_DEFAULT=( \
  "8.8.8.8" \
  "8.8.4.4" \
)

DNS_SERVERS=( )

while getopts ':hdTr:D:s:' opt; do
  case $opt in
    h)
      changeNS_showUsage
      exit 0
      ;;
    d)
      DEBUG_OUTPUT=y
      ;;
    T)
      TEST_ONLY=y
      ;;
    r)
      RESOLV_CONF_PATH="$OPTARG"
      ;;
    D)
      DNS_DOMAIN="$OPTARG"
      ;;
    s)
      DNS_SERVERS+=( "$OPTARG" )
      ;;
    \?)
      echo "Invalid option: -${OPTARG}" >&2
      exit 10
      ;;
    :)
      echo "Option -${OPTARG} requires an argument" >&2
      exit 11
      ;;
  esac
done

if [[ ${#DNS_SERVERS[*]} -eq 0 ]]; then
    DNS_SERVERS=( ${DNS_SERVERS_DEFAULT[*]} )
fi

if [ -n "$DEBUG_OUTPUT" -a "$DEBUG_OUTPUT" != "n" ]; then
  echo -e ":::::::::::::::"
  echo -e ":: VARIABLES ::"
  echo -e ":::::::::::::::"
  echo -e "TEST_ONLY: '${TEST_ONLY}'"
  echo -e "RESOLV_CONF_PATH: '${RESOLV_CONF_PATH}'"
  echo -e "DNS_DOMAIN: '${DNS_DOMAIN}'"
  echo -e "DNS_SERVERS(${#DNS_SERVERS[*]}): "
  for dnsServer in ${DNS_SERVERS[*]}; do
    echo -e "\t${dnsServer}"
  done
  echo
fi

###
# Ensure the user running this is UID=0 (root) unless we're in test mode only
###
if [[ $UID -ne 0 ]]; then
  if [ -z "$TEST_ONLY" ]; then
    echo "ERROR: Must be root. UID=${UID}" >&2
    exit 12
  fi
fi

###
# If we're in TEST_MODE, ensure the following `tee` call redirects to /dev/null
###
[ -n "$TEST_ONLY" ] \
  && RESOLV_CONF_PATH=/dev/null

###
# If DEBUG_OUTPUT is enabled, allow `tee`'s forked output to stdout, otheriwse
# send it to /dev/null
###
teeSecondDest=/dev/null

if [ -n "$DEBUG_OUTPUT" -a "$DEBUG_OUTPUT" != "n" ]; then
  teeSecondDest=/dev/stdout
fi

( \
    echo -e "###\n# Automatically generated by ${SCRIPT_PATH} at $(date)\n###\n\n" ; \
    echo -e "\n###\n# Search Domain\n###" ; \
    [ -n "$DNS_DOMAIN" ] && echo -e "search ${DNS_DOMAIN}" ; \
    [ -z "$DNS_DOMAIN" ] && echo -e "# No domain found - \`hostname -d\` came up blank" ; \
    echo -e "\n###\n# Nameservers\n###" ; \
    for dnsServer in ${DNS_SERVERS[*]}; do
        echo -e "nameserver ${dnsServer} # Global DNS @ ${dnsServer}"
    done ; \
) | tee ${RESOLV_CONF_PATH} 2>>/dev/null >${teeSecondDest}

###
# Determine if the `tee` call was successful or not
###
teeExitVal=$?
if [[ $teeExitVal -ne 0 ]]; then
  echo -e "\n\n\tERROR(${teeExitVal}): Failed to write to '${RESOLV_CONF_PATH}'"
fi

exit $teeExitVal

